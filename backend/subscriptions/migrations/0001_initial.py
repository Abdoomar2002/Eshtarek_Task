# Generated by Django 4.2.7 on 2025-08-02 05:44

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the subscription plan.', max_length=100, unique=True)),
                ('slug', models.SlugField(help_text='URL-friendly identifier for the plan.', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of the plan.')),
                ('price', models.DecimalField(decimal_places=2, help_text='Monthly price of the plan.', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('currency', models.CharField(default='USD', help_text='Currency code for the plan price.', max_length=3)),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Monthly'), ('yearly', 'Yearly'), ('quarterly', 'Quarterly')], default='monthly', help_text='Billing cycle for the plan.', max_length=20)),
                ('max_users', models.PositiveIntegerField(default=1, help_text='Maximum number of users allowed.')),
                ('max_storage_gb', models.PositiveIntegerField(default=1, help_text='Maximum storage in GB.')),
                ('max_api_calls', models.PositiveIntegerField(default=1000, help_text='Maximum API calls per month.')),
                ('features', models.JSONField(blank=True, default=list, help_text='List of features included in this plan.')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the plan is available for subscription.')),
                ('is_popular', models.BooleanField(default=False, help_text='Whether to highlight this plan as popular.')),
                ('sort_order', models.PositiveIntegerField(default=0, help_text='Order for displaying plans.')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata for the plan.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'plan',
                'verbose_name_plural': 'plans',
                'db_table': 'subscriptions_plan',
                'ordering': ['sort_order', 'price'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('cancelled', 'Cancelled'), ('past_due', 'Past Due'), ('unpaid', 'Unpaid'), ('trial', 'Trial')], default='inactive', help_text='Status of the subscription.', max_length=20)),
                ('current_period_start', models.DateTimeField(help_text='Start of the current billing period.')),
                ('current_period_end', models.DateTimeField(help_text='End of the current billing period.')),
                ('trial_start', models.DateTimeField(blank=True, help_text='Start of the trial period.', null=True)),
                ('trial_end', models.DateTimeField(blank=True, help_text='End of the trial period.', null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, help_text='When the subscription was cancelled.', null=True)),
                ('cancel_at_period_end', models.BooleanField(default=False, help_text='Whether to cancel at the end of the current period.')),
                ('stripe_subscription_id', models.CharField(blank=True, help_text='Stripe subscription ID.', max_length=100)),
                ('stripe_customer_id', models.CharField(blank=True, help_text='Stripe customer ID.', max_length=100)),
                ('current_usage', models.JSONField(blank=True, default=dict, help_text='Current usage statistics.')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata for the subscription.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(help_text='Plan for this subscription.', on_delete=django.db.models.deletion.PROTECT, related_name='subscriptions', to='subscriptions.plan')),
                ('tenant', models.ForeignKey(help_text='Tenant this subscription belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'subscription',
                'verbose_name_plural': 'subscriptions',
                'db_table': 'subscriptions_subscription',
            },
        ),
        migrations.CreateModel(
            name='PlanChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_date', models.DateTimeField(help_text='When the change takes effect.')),
                ('reason', models.TextField(blank=True, help_text='Reason for the plan change.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(blank=True, help_text='User who made the change.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plan_changes', to=settings.AUTH_USER_MODEL)),
                ('new_plan', models.ForeignKey(help_text='New plan.', on_delete=django.db.models.deletion.PROTECT, related_name='new_plan_changes', to='subscriptions.plan')),
                ('old_plan', models.ForeignKey(blank=True, help_text='Previous plan.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='old_plan_changes', to='subscriptions.plan')),
                ('subscription', models.ForeignKey(help_text='Subscription that was changed.', on_delete=django.db.models.deletion.CASCADE, related_name='plan_changes', to='subscriptions.subscription')),
            ],
            options={
                'verbose_name': 'plan change',
                'verbose_name_plural': 'plan changes',
                'db_table': 'subscriptions_plan_change',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='plan',
            index=models.Index(fields=['name'], name='subscriptio_name_ec7d9f_idx'),
        ),
        migrations.AddIndex(
            model_name='plan',
            index=models.Index(fields=['slug'], name='subscriptio_slug_df9248_idx'),
        ),
        migrations.AddIndex(
            model_name='plan',
            index=models.Index(fields=['is_active'], name='subscriptio_is_acti_8f27d5_idx'),
        ),
        migrations.AddIndex(
            model_name='plan',
            index=models.Index(fields=['price'], name='subscriptio_price_822d0f_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['tenant'], name='subscriptio_tenant__cf78d1_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['plan'], name='subscriptio_plan_id_a5efcf_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['status'], name='subscriptio_status_5e8870_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['current_period_end'], name='subscriptio_current_e7d593_idx'),
        ),
    ]
